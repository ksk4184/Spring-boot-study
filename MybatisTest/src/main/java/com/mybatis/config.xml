<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
  
<!-- 
	xml 문법을 정의:
	xml에서 나올 태그들에 대한 정보를 미리 정의해 놓음.
	
	DTD
	스키마로 로케이션 지정
 -->


<!--
	config.xml Mybatis 기본적인 설정파일 -
	1.별칭정보
	2.DB정보
	3.매퍼를 정의
	
	3가지 와꾸가 들어갈 수 있다.
 --> 
<configuration>

	<typeAliases>
	<!-- 이것을 이용해서 별칭정보를 등록할 수 있다. xml에서는 import를 할 수 없어,
	클래스의 풀경로를 사용해야하는데 쉽게하려고 Alias를 지정함 -->
	<!-- 다른 xml파일에서도 같이 공유함 -->
	<!-- com.vo.Person을 Person이라고 지정한다 -->
	<typeAlias type="com.vo.Person" alias = "Person"/>
	</typeAliases>
	
<!-- db의 정보를 관리하는 태그 : environments는 자식으로 environment를 1개만
지정할 수 있다, 그럼왜 이런 구조를 했냐? 전략적으로 여러개를 environment 자식태그로
넣을 수 있도록 하는 이유? : 상황에 따라서 환경을 하나만 선택할 수 있도록
예를들어 출시버전과 이전버전의 환경을 미리 만들어 놓고 부모에서 default값만 바꾸어서
환경을 달리 실행하고 싶을때 사용한다.
-->
  <environments default="development">
    <environment id="development">
      <transactionManager type="JDBC"/> <!-- 수동 커밋  -->
 <!-- <transactionManager type="MANAGED"/> 오토 커밋 -->
      <dataSource type="POOLED"> <!-- 커넥션 풀을 사용 property 추가적인 속성을 더 지정할 수 있다.-->
 <!-- <dataSource type="UNPOOLED"> 커넥션 풀을 사용하지 않음, 4가지의 필수 정보가 필요하다 -->
        <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/mydb?serverTimezone=UTC"/>
        <property name="username" value="root"/>
        <property name="password" value="tiger"/>
      </dataSource>
    </environment>
  </environments>
  
  <mappers>
    <mapper resource="com/mybatis/mapper/PersonMapper.xml"/> <!-- (sql문을 작성한)매퍼파일을 지정 -->
  </mappers>
  
</configuration>
